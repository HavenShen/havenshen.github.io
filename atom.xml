<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://havenshen.com</id>
    <title>Haven Shen</title>
    <updated>2021-01-29T01:17:06.914Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://havenshen.com"/>
    <link rel="self" href="https://havenshen.com/atom.xml"/>
    <subtitle>Code Artisan.</subtitle>
    <logo>https://havenshen.com/images/avatar.png</logo>
    <icon>https://havenshen.com/favicon.ico</icon>
    <rights>All rights reserved 2021, Haven Shen</rights>
    <entry>
        <title type="html"><![CDATA[从这里开始使用 Slim 3 视图篇]]></title>
        <id>https://havenshen.com/post/cong-zhe-li-kai-shi-shi-yong-slim-3-shi-tu-pian/</id>
        <link href="https://havenshen.com/post/cong-zhe-li-kai-shi-shi-yong-slim-3-shi-tu-pian/">
        </link>
        <updated>2016-06-29T06:34:22.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>延续 <a href="http://havenshen.com/articles/2016/06/getting-started-slim-3.html">从这里开始使用 Slim 3 入门篇</a> 项目结构,请了解。</p>
</blockquote>
<h2 id="安装视图组件">安装视图组件</h2>
<p>在 site 项目根目录运行</p>
<pre><code>composer require slim/twig-view
</code></pre>
<h2 id="设置容器">设置容器</h2>
<p>修改 site/app/bootstrap.php 文件</p>
<pre><code class="language-php">// ...

// 修改 $app = new \Slim\App;
$container = new \Slim\Container;
$container['view'] = function ($c) {
	$view = new \Slim\Views\Twig('../resources/views');
	
	$view-&gt;addExtension(new \Slim\Views\TwigExtension(
		$c['router'],
		$c['request']-&gt;getUri(),
	));
	
	return $view;
};
$app = new \Slim\App($container);

// ...
</code></pre>
<h2 id="渲染视图">渲染视图</h2>
<p>创建 site/resources/views/home.twig 文件</p>
<pre><code class="language-php">This is the home view.
</code></pre>
<p>修改 site/app/routes.php 文件</p>
<pre><code class="language-php">// ...

/* 修改
* $app-&gt;get('/', function ($request, $response, $args) {
*   echo 'Home';
* });
*/
$app-&gt;get('/', function ($request, $response, $args) {
	return $this-&gt;view-&gt;render($response, 'home.twig');
});

// ...
</code></pre>
<blockquote>
<p>运行下网站看效果 ...</p>
</blockquote>
<h2 id="数据传送至视图">数据传送至视图</h2>
<p>修改 site/app/routes.php 文件</p>
<pre><code class="language-php">// ...

/* 修改
* $app-&gt;get('/', function ($request, $response, $args) {
* 	return $this-&gt;view-&gt;render($response, 'home.twig');
* });
*/ 
$app-&gt;get('/', function ($request, $response, $args) {
	$name = 'Haven';
	
	return $this-&gt;view-&gt;render($response, 'home.twig', [
		'name' =&gt; $name,
	]);
});

// ...
</code></pre>
<p>修改 site/resources/views/home.twig 文件</p>
<pre><code class="language-php">// 修改 This is the home view.
Hello {{ name }}
</code></pre>
<blockquote>
<p>运行下网站看效果 ...</p>
</blockquote>
<p>路由参数传递</p>
<p>修改 site/app/routes.php 文件</p>
<pre><code class="language-php">// ...

//增加
$app-&gt;get('/profile/{username}', function ($request, $response, $args) {
	
	return $this-&gt;view-&gt;render($response, 'home.twig', [
		'name' =&gt; $args['username'],
	]);
});

// ...
</code></pre>
<blockquote>
<p>运行下网站看效果 ...</p>
</blockquote>
<h2 id="path_for-函数使用">path_for 函数使用</h2>
<p>修改 site/app/routes.php 文件</p>
<pre><code class="language-php">// ...

/* 修改
* $app-&gt;get('/profile/{username}', function ($request, $response, $args) {
* 
* 	return $this-&gt;view-&gt;render($response, 'home.twig', [
* 		'name' =&gt; $args['username'],
* 	]);
* });
*/
$app-&gt;get('/profile/{username}', function ($request, $response, $args) {
	echo $args['username'];
})-&gt;setName('user.profile');

// ...
</code></pre>
<p>修改 site/resources/views/home.twig 文件</p>
<pre><code class="language-php">// 修改 Hello {{ name }}
&lt;a href=&quot;\{\{ path_for('user.profile', {'username': 'Haven'}) }}&quot;&gt;Haven's user profile&lt;/a&gt;
</code></pre>
<blockquote>
<p>运行下网站看效果 ...</p>
</blockquote>
<p>你也可以使用 Router 路径来实现，但推荐使用 path_for 函数，如果你改了 Router 路径 setName()  这个别名是不变的，所以不会引起你因业务修改 Router 路径造成你更改大量的的静态页面路径，可维护性更高。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[从这里开始使用 Slim 3 入门篇]]></title>
        <id>https://havenshen.com/post/cong-zhe-li-kai-shi-shi-yong-slim-3-ru-men-pian/</id>
        <link href="https://havenshen.com/post/cong-zhe-li-kai-shi-shi-yong-slim-3-ru-men-pian/">
        </link>
        <updated>2016-06-29T06:20:50.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>Slim 3 是一个不错的轻框架，如果你刚开始接触 Slim 3，那就从这里开始吧。</p>
</blockquote>
<h2 id="下载-slim-3">下载 Slim 3</h2>
<p>创建 site 项目文件夹</p>
<p>创建 site/composer.json 文件</p>
<pre><code>{
	&quot;require&quot;: {
		&quot;slim/slim&quot;: &quot;^3.0@RC&quot;  
	}
}
</code></pre>
<p>在 site/ 根目录下</p>
<pre><code>composer install
</code></pre>
<p>创建 site/app/bootstrap.php 文件</p>
<pre><code class="language-php">&lt;?php 

require_once '../vendor/autoload.php';
</code></pre>
<p>创建 site/public/index.php 文件</p>
<pre><code class="language-php">&lt;?php 

require_once '../app/bootstrap.php';
</code></pre>
<h2 id="开始使用">开始使用</h2>
<p>修改 site/app/bootstrap.php 文件</p>
<pre><code class="language-php">// ...
//增加代码
$app = new \Slim\App;
</code></pre>
<h2 id="创建-routes">创建 Routes</h2>
<p>创建 site/app/routes.php 文件</p>
<pre><code class="language-php">&lt;?php 

$app-&gt;get('/', function ($request, $response, $args) {
	echo 'Home';
});
</code></pre>
<p>修改 site/app/bootstrap.php 文件</p>
<pre><code class="language-php">// ...
//增加代码
require_once 'routes.php';
</code></pre>
<p>修改 site/public/index.php 文件</p>
<pre><code class="language-php">
// ...
//增加代码
$app-&gt;run();
</code></pre>
<h2 id="伪静态请求">伪静态请求</h2>
<p>修改 site/app/routes.php 文件</p>
<pre><code class="language-php">// ...
//增加代码
$app-&gt;get('/login', function ($request, $response, $args) {
	echo 'Login';
});
</code></pre>
<p>创建 site/public/.htaccess 文件</p>
<pre><code>RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ index.php [QSA,L]
</code></pre>
<blockquote>
<p>实现伪静态，重申 Nginx 是支持 .htaccess 文件的，不是只有 Apache 才支持。</p>
</blockquote>
]]></content>
    </entry>
</feed>